 0000                   cpu LMM
                        .module main.c
                        .area data(ram, con, rel)
 0000           _Cam1::
 0000 00                .byte 0
 0001                   .dbfile ./trabajo.h
 0001                   .dbsym e Cam1 _Cam1 c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Cam2::
 0000 00                .byte 0
 0001                   .dbsym e Cam2 _Cam2 c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Ent1::
 0000 00                .byte 0
 0001                   .dbsym e Ent1 _Ent1 c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Ent2::
 0000 00                .byte 0
 0001                   .dbsym e Ent2 _Ent2 c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Ent3::
 0000 00                .byte 0
 0001                   .dbsym e Ent3 _Ent3 c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Ent4::
 0000 00                .byte 0
 0001                   .dbsym e Ent4 _Ent4 c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Fla1::
 0000 00                .byte 0
 0001                   .dbsym e Fla1 _Fla1 c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Fla2::
 0000 00                .byte 0
 0001                   .dbsym e Fla2 _Fla2 c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Fla3::
 0000 00                .byte 0
 0001                   .dbsym e Fla3 _Fla3 c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Fla4::
 0000 00                .byte 0
 0001                   .dbsym e Fla4 _Fla4 c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Int1_Tdisp::
 0000 00                .byte 0
 0001                   .dbsym e Int1_Tdisp _Int1_Tdisp c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Int1_Tdisp_Uni::
 0000 00                .byte 0
 0001                   .dbsym e Int1_Tdisp_Uni _Int1_Tdisp_Uni c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Int1_Ndisp::
 0000 00                .byte 0
 0001                   .dbsym e Int1_Ndisp _Int1_Ndisp c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Int2_Tdisp::
 0000 00                .byte 0
 0001                   .dbsym e Int2_Tdisp _Int2_Tdisp c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Int2_Tdisp_Uni::
 0000 00                .byte 0
 0001                   .dbsym e Int2_Tdisp_Uni _Int2_Tdisp_Uni c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _Int2_Ndisp::
 0000 00                .byte 0
 0001                   .dbsym e Int2_Ndisp _Int2_Ndisp c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _TL1_Treal::
 0000 00                .byte 0
 0001                   .dbsym e TL1_Treal _TL1_Treal c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _TL1_Treal_Uni::
 0000 00                .byte 0
 0001                   .dbsym e TL1_Treal_Uni _TL1_Treal_Uni c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _TL1_Tfilm::
 0000 00                .byte 0
 0001                   .dbsym e TL1_Tfilm _TL1_Tfilm c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _TL1_Tfilm_Uni::
 0000 00                .byte 0
 0001                   .dbsym e TL1_Tfilm_Uni _TL1_Tfilm_Uni c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _TL2_Treal::
 0000 00                .byte 0
 0001                   .dbsym e TL2_Treal _TL2_Treal c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _TL2_Treal_Uni::
 0000 00                .byte 0
 0001                   .dbsym e TL2_Treal_Uni _TL2_Treal_Uni c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _TL2_Tfilm::
 0000 00                .byte 0
 0001                   .dbsym e TL2_Tfilm _TL2_Tfilm c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
 0000           _TL2_Tfilm_Uni::
 0000 00                .byte 0
 0001                   .dbsym e TL2_Tfilm_Uni _TL2_Tfilm_Uni c
                        .area data(ram, con, rel)
 0000                   .dbfile ./trabajo.h
                        .area text(rom, con, rel)
 0000                   .dbfile ./trabajo.h
 0000                   .dbfunc e inicializacion _inicializacion fV
 0000           _inicializacion::
 0000                   .dbline -1
 0000                   .dbline 59
 0000           ; //----------------------------------------------------------------//
 0000           ; //     Proyecto de GS Desarrollo Productos Electronicos EPSS    //
 0000           ; //                   By Albert Sagol & Xavi Vicient                         //
 0000           ; //                 PhotoSoC - Controlador fotográfico                   //
 0000           ; //----------------------------------------------------------------//
 0000           ; //              Programa principal del PSoC de trabajo                          //
 0000           ; //----------------------------------------------------------------//
 0000           ; 
 0000           ; 
 0000           ; #include <m8c.h>                      // part specific constants and macros
 0000           ; #include "PSoCAPI.h"                          // PSoC API definitions for all User Modules
 0000           ; #include "stdlib.h"
 0000           ; #include "trabajo.h"                  // Libreria creada para el PSoc de trabajo por Albert y Xavi para el proyecto
 0000           ; #include "comunicaciones.h"   // Libreria de comunicaciones creada por Albert y Xavi para el proyecto
 0000           ; 
 0000           ; 
 0000           ; #pragma interrupt_handler MI_RSI_EXTERNA
 0000           ; 
 0000           ; 
 0000           ; void MI_RSI_EXTERNA(void)             //Interrupción externa
 0000           ; {
 0000           ;       disparo_sensores();
 0000           ; }
 0000           ; 
 0000           ; 
 0000           ; void main()                                           //Programa principal
 0000           ; {     
 0000           ;       inicializacion ();
 0000           ;       recibe_valores();
 0000           ;       activar_sensores();     
 0000           ;       ejecucion();
 0000           ; }             
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000           ; 
 0000                   .dbline 61
 0000           ; 
 0000           ; 
 0000 10                push X
 0001 509C              mov A,-100
 0003 7C0000            xcall _Timer8_WritePeriod
 0006                   .dbline 62
 0006           ; 
 0006 504E              mov A,78
 0008 7C0000            xcall _Timer8_WriteCompareValue
 000B                   .dbline 63
 000B           ; 
 000B 7C0000            xcall _Timer8_Start
 000E                   .dbline 66
 000E           ; 
 000E           ; 
 000E           ; 
 000E 5000              mov A,0
 0010 7C0000            xcall _UART_Start
 0013                   .dbline 69
 0013           ; 
 0013           ; 
 0013           ; 
 0013 5727              mov X,39
 0015 5010              mov A,16
 0017 7C0000            xcall _Segundos_WritePeriod
 001A                   .dbline 70
 001A           ; 
 001A 5000              mov A,0
 001C 5C                mov X,A
 001D 7C0000            xcall _Segundos_WriteCompareValue
 0020                   .dbline 71
 0020           ; 
 0020 7C0000            xcall _Segundos_Start
 0023 20                pop X
 0024                   .dbline -2
 0024                   .dbline 72
 0024           ; 
 0024           L1:
 0024                   .dbline 0 ; func end
 0024 7F                ret
 0025                   .dbend
 0025                   .dbfunc e recibe_valores _recibe_valores fV
 0025           _recibe_valores::
 0025                   .dbline -1
 0025                   .dbline 89
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025           ; 
 0025                   .dbline 90
 0025           ; 
 0025 927E              xcall _recibe
 0027 62D000            mov REG[0xd0],>__r0
 002A 5100              mov A,[__r1]
 002C 62D000            mov REG[0xd0],>_Cam1
 002F 5300              mov [_Cam1],A
 0031                   .dbline 91
 0031           ; 
 0031 9272              xcall _recibe
 0033 62D000            mov REG[0xd0],>__r0
 0036 5100              mov A,[__r1]
 0038 62D000            mov REG[0xd0],>_Cam2
 003B 5300              mov [_Cam2],A
 003D                   .dbline 92
 003D           ; 
 003D 9266              xcall _recibe
 003F 62D000            mov REG[0xd0],>__r0
 0042 5100              mov A,[__r1]
 0044 62D000            mov REG[0xd0],>_Ent1
 0047 5300              mov [_Ent1],A
 0049                   .dbline 93
 0049           ; 
 0049 925A              xcall _recibe
 004B 62D000            mov REG[0xd0],>__r0
 004E 5100              mov A,[__r1]
 0050 62D000            mov REG[0xd0],>_Ent2
 0053 5300              mov [_Ent2],A
 0055                   .dbline 94
 0055           ; 
 0055 924E              xcall _recibe
 0057 62D000            mov REG[0xd0],>__r0
 005A 5100              mov A,[__r1]
 005C 62D000            mov REG[0xd0],>_Ent3
 005F 5300              mov [_Ent3],A
 0061                   .dbline 95
 0061           ; 
 0061 9242              xcall _recibe
 0063 62D000            mov REG[0xd0],>__r0
 0066 5100              mov A,[__r1]
 0068 62D000            mov REG[0xd0],>_Ent4
 006B 5300              mov [_Ent4],A
 006D                   .dbline 96
 006D           ; 
 006D 9236              xcall _recibe
 006F 62D000            mov REG[0xd0],>__r0
 0072 5100              mov A,[__r1]
 0074 62D000            mov REG[0xd0],>_Fla1
 0077 5300              mov [_Fla1],A
 0079                   .dbline 97
 0079           ; 
 0079 922A              xcall _recibe
 007B 62D000            mov REG[0xd0],>__r0
 007E 5100              mov A,[__r1]
 0080 62D000            mov REG[0xd0],>_Fla2
 0083 5300              mov [_Fla2],A
 0085                   .dbline 98
 0085           ; 
 0085 921E              xcall _recibe
 0087 62D000            mov REG[0xd0],>__r0
 008A 5100              mov A,[__r1]
 008C 62D000            mov REG[0xd0],>_Fla3
 008F 5300              mov [_Fla3],A
 0091                   .dbline 99
 0091           ; 
 0091 9212              xcall _recibe
 0093 62D000            mov REG[0xd0],>__r0
 0096 5100              mov A,[__r1]
 0098 62D000            mov REG[0xd0],>_Fla4
 009B 5300              mov [_Fla4],A
 009D                   .dbline 101
 009D           ; 
 009D           ; 
 009D 62D000            mov REG[0xd0],>_Cam1
 00A0 3C0002            cmp [_Cam1],2
 00A3 B00D              jnz L3
 00A5                   .dbline 102
 00A5           ; 
 00A5 91FE              xcall _recibe
 00A7 62D000            mov REG[0xd0],>__r0
 00AA 5100              mov A,[__r1]
 00AC 62D000            mov REG[0xd0],>_Int1_Tdisp
 00AF 5300              mov [_Int1_Tdisp],A
 00B1           L3:
 00B1                   .dbline 103
 00B1           ; 
 00B1 91F2              xcall _recibe
 00B3 62D000            mov REG[0xd0],>__r0
 00B6 5100              mov A,[__r1]
 00B8 62D000            mov REG[0xd0],>_Int1_Tdisp_Uni
 00BB 5300              mov [_Int1_Tdisp_Uni],A
 00BD                   .dbline 104
 00BD           ; 
 00BD 91E6              xcall _recibe
 00BF 62D000            mov REG[0xd0],>__r0
 00C2 5100              mov A,[__r1]
 00C4 62D000            mov REG[0xd0],>_Int1_Ndisp
 00C7 5300              mov [_Int1_Ndisp],A
 00C9                   .dbline 106
 00C9           ; 
 00C9           ; 
 00C9 62D000            mov REG[0xd0],>_Cam2
 00CC 3C0002            cmp [_Cam2],2
 00CF B00D              jnz L5
 00D1                   .dbline 107
 00D1           ; 
 00D1 91D2              xcall _recibe
 00D3 62D000            mov REG[0xd0],>__r0
 00D6 5100              mov A,[__r1]
 00D8 62D000            mov REG[0xd0],>_Int2_Tdisp
 00DB 5300              mov [_Int2_Tdisp],A
 00DD           L5:
 00DD                   .dbline 108
 00DD           ; 
 00DD 91C6              xcall _recibe
 00DF 62D000            mov REG[0xd0],>__r0
 00E2 5100              mov A,[__r1]
 00E4 62D000            mov REG[0xd0],>_Int2_Tdisp_Uni
 00E7 5300              mov [_Int2_Tdisp_Uni],A
 00E9                   .dbline 109
 00E9           ; 
 00E9 91BA              xcall _recibe
 00EB 62D000            mov REG[0xd0],>__r0
 00EE 5100              mov A,[__r1]
 00F0 62D000            mov REG[0xd0],>_Int2_Ndisp
 00F3 5300              mov [_Int2_Ndisp],A
 00F5                   .dbline 111
 00F5           ; 
 00F5           ; 
 00F5 62D000            mov REG[0xd0],>_Cam1
 00F8 3C0003            cmp [_Cam1],3
 00FB B00D              jnz L7
 00FD                   .dbline 112
 00FD           ; 
 00FD 91A6              xcall _recibe
 00FF 62D000            mov REG[0xd0],>__r0
 0102 5100              mov A,[__r1]
 0104 62D000            mov REG[0xd0],>_TL1_Treal
 0107 5300              mov [_TL1_Treal],A
 0109           L7:
 0109                   .dbline 113
 0109           ; 
 0109 919A              xcall _recibe
 010B 62D000            mov REG[0xd0],>__r0
 010E 5100              mov A,[__r1]
 0110 62D000            mov REG[0xd0],>_TL1_Treal_Uni
 0113 5300              mov [_TL1_Treal_Uni],A
 0115                   .dbline 114
 0115           ; 
 0115 918E              xcall _recibe
 0117 62D000            mov REG[0xd0],>__r0
 011A 5100              mov A,[__r1]
 011C 62D000            mov REG[0xd0],>_TL1_Tfilm
 011F 5300              mov [_TL1_Tfilm],A
 0121                   .dbline 115
 0121           ; 
 0121 9182              xcall _recibe
 0123 62D000            mov REG[0xd0],>__r0
 0126 5100              mov A,[__r1]
 0128 62D000            mov REG[0xd0],>_TL1_Tfilm_Uni
 012B 5300              mov [_TL1_Tfilm_Uni],A
 012D                   .dbline 117
 012D           ; 
 012D           ; 
 012D 62D000            mov REG[0xd0],>_Cam2
 0130 3C0003            cmp [_Cam2],3
 0133 B00D              jnz L9
 0135                   .dbline 118
 0135           ; 
 0135 916E              xcall _recibe
 0137 62D000            mov REG[0xd0],>__r0
 013A 5100              mov A,[__r1]
 013C 62D000            mov REG[0xd0],>_TL2_Treal
 013F 5300              mov [_TL2_Treal],A
 0141           L9:
 0141                   .dbline 119
 0141           ; 
 0141 9162              xcall _recibe
 0143 62D000            mov REG[0xd0],>__r0
 0146 5100              mov A,[__r1]
 0148 62D000            mov REG[0xd0],>_TL2_Treal_Uni
 014B 5300              mov [_TL2_Treal_Uni],A
 014D                   .dbline 120
 014D           ; 
 014D 9156              xcall _recibe
 014F 62D000            mov REG[0xd0],>__r0
 0152 5100              mov A,[__r1]
 0154 62D000            mov REG[0xd0],>_TL2_Tfilm
 0157 5300              mov [_TL2_Tfilm],A
 0159                   .dbline 121
 0159           ; 
 0159 914A              xcall _recibe
 015B 62D000            mov REG[0xd0],>__r0
 015E 5100              mov A,[__r1]
 0160 62D000            mov REG[0xd0],>_TL2_Tfilm_Uni
 0163 5300              mov [_TL2_Tfilm_Uni],A
 0165                   .dbline -2
 0165                   .dbline 124
 0165           ; 
 0165           ; 
 0165           ; 
 0165           L2:
 0165                   .dbline 0 ; func end
 0165 7F                ret
 0166                   .dbend
 0166                   .dbfunc e activar_sensores _activar_sensores fV
 0166           _activar_sensores::
 0166                   .dbline -1
 0166                   .dbline 141
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166           ; 
 0166                   .dbline 142
 0166           ; 
 0166 62D000            mov REG[0xd0],>_Ent1
 0169 3C0001            cmp [_Ent1],1
 016C A019              jz L16
 016E 62D000            mov REG[0xd0],>_Ent2
 0171 3C0001            cmp [_Ent2],1
 0174 A011              jz L16
 0176 62D000            mov REG[0xd0],>_Ent3
 0179 3C0001            cmp [_Ent3],1
 017C A009              jz L16
 017E 62D000            mov REG[0xd0],>_Ent4
 0181 3C0001            cmp [_Ent4],1
 0184 B006              jnz L12
 0186           L16:
 0186                   .dbline 143
 0186                   .dbline 144
 0186 7101                      or  F, 01h
 0188           
 0188                   .dbline 145
 0188 43E020            or REG[0xe0],32
 018B                   .dbline 146
 018B           L12:
 018B                   .dbline -2
 018B                   .dbline 147
 018B           ; 
 018B           ; 
 018B           ; 
 018B           ; 
 018B           ; 
 018B           L11:
 018B                   .dbline 0 ; func end
 018B 7F                ret
 018C                   .dbend
 018C                   .dbfunc e ejecucion _ejecucion fV
 018C           _ejecucion::
 018C                   .dbline -1
 018C                   .dbline 163
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C           ; 
 018C                   .dbline 164
 018C           ; 
 018C 9001              xcall _tipodisparo
 018E                   .dbline -2
 018E                   .dbline 166
 018E           ; 
 018E           ; 
 018E           L17:
 018E                   .dbline 0 ; func end
 018E 7F                ret
 018F                   .dbend
 018F                   .dbfunc e tipodisparo _tipodisparo fV
 018F           _tipodisparo::
 018F                   .dbline -1
 018F                   .dbline 184
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F           ; 
 018F                   .dbline 185
 018F           ; 
 018F 62D000            mov REG[0xd0],>_Cam1
 0192 3C0001            cmp [_Cam1],1
 0195 B011              jnz L19
 0197                   .dbline 188
 0197           ; 
 0197           ; 
 0197           ; 
 0197 62D000            mov REG[0xd0],>_Cam2
 019A 3C0001            cmp [_Cam2],1
 019D B009              jnz L21
 019F                   .dbline 191
 019F           ; 
 019F           ; 
 019F           ; 
 019F 62D000            mov REG[0xd0],>_Cam1
 01A2 3C0002            cmp [_Cam1],2
 01A5 B001              jnz L23
 01A7                   .dbline 192
 01A7           ; 
 01A7                   .dbline 194
 01A7           ; 
 01A7           ; 
 01A7           L23:
 01A7           L21:
 01A7           L19:
 01A7                   .dbline 196
 01A7           ; 
 01A7           ; 
 01A7 62D000            mov REG[0xd0],>_Cam1
 01AA 3C0003            cmp [_Cam1],3
 01AD B001              jnz L25
 01AF                   .dbline 197
 01AF           ; 
 01AF                   .dbline 199
 01AF           ; 
 01AF           ; 
 01AF           L25:
 01AF                   .dbline 201
 01AF           ; 
 01AF           ; 
 01AF 62D000            mov REG[0xd0],>_Cam2
 01B2 3C0002            cmp [_Cam2],2
 01B5 B001              jnz L27
 01B7                   .dbline 202
 01B7           ; 
 01B7                   .dbline 204
 01B7           ; 
 01B7           ; 
 01B7           L27:
 01B7                   .dbline 206
 01B7 62D000            mov REG[0xd0],>_Cam2
 01BA 3C0003            cmp [_Cam2],3
 01BD B001              jnz L29
 01BF                   .dbline 207
 01BF                   .dbline 209
 01BF           L29:
 01BF                   .dbline -2
 01BF                   .dbline 210
 01BF           ; 
 01BF           ; 
 01BF           ; 
 01BF           ; 
 01BF           ; 
 01BF           ; 
 01BF           L18:
 01BF                   .dbline 0 ; func end
 01BF 7F                ret
 01C0                   .dbend
 01C0                   .dbfunc e disparo_sensores _disparo_sensores fV
 01C0           _disparo_sensores::
 01C0                   .dbline -1
 01C0                   .dbline 233
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0           ; 
 01C0                   .dbline 234
 01C0           ; 
 01C0 9001              xcall _disparo
 01C2                   .dbline -2
 01C2                   .dbline 235
 01C2           ; 
 01C2           L31:
 01C2                   .dbline 0 ; func end
 01C2 7F                ret
 01C3                   .dbend
 01C3                   .dbfunc e disparo _disparo fV
 01C3           _disparo::
 01C3                   .dbline -1
 01C3                   .dbline 252
 01C3                   .dbline 253
 01C3 62D000            mov REG[0xd0],>_Cam1
 01C6 3C0001            cmp [_Cam1],1
 01C9 B00C              jnz L33
 01CB 62D000            mov REG[0xd0],>_Cam2
 01CE 3C0001            cmp [_Cam2],1
 01D1 B004              jnz L33
 01D3                   .dbline 254
 01D3 7C0000            xcall _dispara_camaras
 01D6           L33:
 01D6                   .dbline -2
 01D6                   .dbline 255
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           ; 
 01D6           L32:
 01D6                   .dbline 0 ; func end
 01D6 7F                ret
 01D7                   .dbend
 01D7                   .dbfunc e Disparo_camara _Disparo_camara fV
 01D7           ;              x -> X+0
 01D7           ; disparo_camara_numero -> X-4
 01D7           _Disparo_camara::
 01D7                   .dbline -1
 01D7 10                push X
 01D8 4F                mov X,SP
 01D9 3802              add SP,2
 01DB                   .dbline 263
 01DB           ; 
 01DB           ; 
 01DB           ; 
 01DB           ; 
 01DB           ; 
 01DB           ; 
 01DB           ; 
 01DB           ; 
 01DB                   .dbline 266
 01DB           ; 
 01DB           ; 
 01DB           ; 
 01DB 3DFC01            cmp [X-4],1
 01DE B007              jnz L36
 01E0                   .dbline 267
 01E0           ; 
 01E0                   .dbline 268
 01E0           ; 
 01E0 430801            or REG[0x8],1
 01E3                   .dbline 269
 01E3           ; 
 01E3 430804            or REG[0x8],4
 01E6                   .dbline 270
 01E6           ; 
 01E6           L36:
 01E6                   .dbline 271
 01E6           ; 
 01E6 3DFC02            cmp [X-4],2
 01E9 B007              jnz L38
 01EB                   .dbline 272
 01EB           ; 
 01EB                   .dbline 273
 01EB           ; 
 01EB 430810            or REG[0x8],16
 01EE                   .dbline 274
 01EE           ; 
 01EE 430840            or REG[0x8],64
 01F1                   .dbline 275
 01F1           ; 
 01F1           L38:
 01F1                   .dbline 277
 01F1 560100            mov [X+1],0
 01F4 560000            mov [X+0],0
 01F7           L40:
 01F7                   .dbline 277
 01F7           L41:
 01F7                   .dbline 277
 01F7           ; 
 01F7           ; 
 01F7 7701              inc [X+1]
 01F9 0F0000            adc [X+0],0
 01FC                   .dbline 277
 01FC 5201              mov A,[X+1]
 01FE 112C              sub A,44
 0200 5200              mov A,[X+0]
 0202 3180              xor A,-128
 0204 1981              sbb A,(1 ^ 0x80)
 0206 CFF0              jc L40
 0208           X0:
 0208                   .dbline 280
 0208           ; 
 0208           ; 
 0208           ; 
 0208 4108FA            and REG[0x8],-6
 020B                   .dbline 281
 020B           ; 
 020B 4108AF            and REG[0x8],-81
 020E                   .dbline -2
 020E                   .dbline 282
 020E           ; 
 020E           L35:
 020E 38FE              add SP,-2
 0210 20                pop X
 0211                   .dbline 0 ; func end
 0211 7F                ret
 0212                   .dbsym l x 0 I
 0212                   .dbsym l disparo_camara_numero -4 c
 0212                   .dbend
 0212                   .dbfunc e Dispara_camaras _Dispara_camaras fV
 0212           _Dispara_camaras::
 0212                   .dbline -1
 0212                   .dbline 290
 0212           ; 
 0212           ; 
 0212           ; 
 0212           ; 
 0212           ; 
 0212           ; 
 0212           ; 
 0212           ; 
 0212                   .dbline 291
 0212           ; 
 0212 62D000            mov REG[0xd0],>_Cam1
 0215 3C0001            cmp [_Cam1],1
 0218 B008              jnz L45
 021A                   .dbline 291
 021A 5001              mov A,1
 021C 08                push A
 021D 9FB8              xcall _Disparo_camara
 021F 38FF              add SP,-1
 0221           L45:
 0221                   .dbline 292
 0221 62D000            mov REG[0xd0],>_Cam2
 0224 3C0001            cmp [_Cam2],1
 0227 B008              jnz L47
 0229                   .dbline 292
 0229 5002              mov A,2
 022B 08                push A
 022C 9FA9              xcall _Disparo_camara
 022E 38FF              add SP,-1
 0230           L47:
 0230                   .dbline -2
 0230                   .dbline 293
 0230           ; 
 0230           ; 
 0230           L44:
 0230                   .dbline 0 ; func end
 0230 7F                ret
 0231                   .dbend
 0231                   .dbfunc e Intervalometro _Intervalometro fV
 0231           ;      Int_Tdisp -> X+2
 0231           ;      Int_Ndisp -> X+1
 0231           ; intervalometro_x -> X+0
 0231           _Intervalometro::
 0231                   .dbline -1
 0231 10                push X
 0232 4F                mov X,SP
 0233 3803              add SP,3
 0235                   .dbline 310
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235                   .dbline 316
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235           ; 
 0235 560000            mov [X+0],0
 0238 8017              xjmp L53
 023A           L50:
 023A                   .dbline 317
 023A                   .dbline 318
 023A 9FD6              xcall _Dispara_camaras
 023C                   .dbline 319
 023C 62D000            mov REG[0xd0],>__r0
 023F 5202              mov A,[X+2]
 0241 5300              mov [__r1],A
 0243 5000              mov A,0
 0245 08                push A
 0246 5100              mov A,[__r1]
 0248 08                push A
 0249 7C0000            xcall _Temporizador
 024C 38FE              add SP,-2
 024E                   .dbline 320
 024E           L51:
 024E                   .dbline 316
 024E 7700              inc [X+0]
 0250           L53:
 0250                   .dbline 316
 0250 5200              mov A,[X+0]
 0252 3B01              cmp A,[X+1]
 0254 CFE5              jc L50
 0256           X1:
 0256                   .dbline -2
 0256                   .dbline 321
 0256           ; 
 0256           ; 
 0256           ; 
 0256           ; 
 0256           ; 
 0256           L49:
 0256 38FD              add SP,-3
 0258 20                pop X
 0259                   .dbline 0 ; func end
 0259 7F                ret
 025A                   .dbsym l Int_Tdisp 2 c
 025A                   .dbsym l Int_Ndisp 1 c
 025A                   .dbsym l intervalometro_x 0 c
 025A                   .dbend
 025A                   .dbfile ./comunicaciones.h
 025A                   .dbfunc e envia _envia fV
 025A           ;   envia_recibe -> X+2
 025A           ; envia_contador -> X+1
 025A           ; envia_confirmacion -> X+0
 025A           ;     envia_dato -> X-4
 025A           _envia::
 025A                   .dbline -1
 025A 10                push X
 025B 4F                mov X,SP
 025C 3803              add SP,3
 025E                   .dbline 19
 025E                   .dbline 22
 025E 560000            mov [X+0],0
 0261                   .dbline 23
 0261 560100            mov [X+1],0
 0264 8037              xjmp L56
 0266           L55:
 0266                   .dbline 26
 0266                   .dbline 27
 0266 10                push X
 0267 52FC              mov A,[X-4]
 0269 7C0000            xcall _UART_PutChar
 026C                   .dbline 28
 026C 7C0000            xcall _UART_cGetChar
 026F 62D000            mov REG[0xd0],>__r0
 0272 20                pop X
 0273 5402              mov [X+2],A
 0275                   .dbline 30
 0275 5202              mov A,[X+2]
 0277 3BFC              cmp A,[X-4]
 0279 B004              jnz L58
 027B                   .dbline 30
 027B 56004F            mov [X+0],79
 027E           L58:
 027E                   .dbline 31
 027E 10                push X
 027F 5200              mov A,[X+0]
 0281 7C0000            xcall _UART_PutChar
 0284 20                pop X
 0285                   .dbline 32
 0285 5201              mov A,[X+1]
 0287 62D000            mov REG[0xd0],>__r0
 028A 5300              mov [__r0],A
 028C 0101              add A,1
 028E 5401              mov [X+1],A
 0290 5100              mov A,[__r0]
 0292 5401              mov [X+1],A
 0294                   .dbline 33
 0294 3D010A            cmp [X+1],10
 0297 B004              jnz L60
 0299                   .dbline 33
 0299 560001            mov [X+0],1
 029C           L60:
 029C                   .dbline 34
 029C           L56:
 029C                   .dbline 25
 029C 3D0000            cmp [X+0],0
 029F AFC6              jz L55
 02A1                   .dbline -2
 02A1                   .dbline 35
 02A1           L54:
 02A1 38FD              add SP,-3
 02A3 20                pop X
 02A4                   .dbline 0 ; func end
 02A4 7F                ret
 02A5                   .dbsym l envia_recibe 2 c
 02A5                   .dbsym l envia_contador 1 c
 02A5                   .dbsym l envia_confirmacion 0 c
 02A5                   .dbsym l envia_dato -4 c
 02A5                   .dbend
 02A5                   .dbfunc e recibe _recibe fc
 02A5           ;    recibe_dato -> X+2
 02A5           ; recibe_contador -> X+1
 02A5           ; recibe_confirmacion -> X+0
 02A5           _recibe::
 02A5                   .dbline -1
 02A5 10                push X
 02A6 4F                mov X,SP
 02A7 3803              add SP,3
 02A9                   .dbline 50
 02A9                   .dbline 53
 02A9 560000            mov [X+0],0
 02AC                   .dbline 54
 02AC 560100            mov [X+1],0
 02AF 803A              xjmp L64
 02B1           L63:
 02B1                   .dbline 57
 02B1                   .dbline 58
 02B1 10                push X
 02B2 7C0000            xcall _UART_cGetChar
 02B5 62D000            mov REG[0xd0],>__r0
 02B8 20                pop X
 02B9 5402              mov [X+2],A
 02BB                   .dbline 59
 02BB 10                push X
 02BC 5202              mov A,[X+2]
 02BE 7C0000            xcall _UART_PutChar
 02C1                   .dbline 61
 02C1 7C0000            xcall _UART_cGetChar
 02C4 62D000            mov REG[0xd0],>__r0
 02C7 20                pop X
 02C8 5400              mov [X+0],A
 02CA                   .dbline 62
 02CA 3D004F            cmp [X+0],79
 02CD B005              jnz L66
 02CF                   .dbline 63
 02CF 5202              mov A,[X+2]
 02D1 8022              xjmp L62
 02D3           L66:
 02D3                   .dbline 64
 02D3 5201              mov A,[X+1]
 02D5 62D000            mov REG[0xd0],>__r0
 02D8 5300              mov [__r0],A
 02DA 0101              add A,1
 02DC 5401              mov [X+1],A
 02DE 5100              mov A,[__r0]
 02E0 5401              mov [X+1],A
 02E2                   .dbline 65
 02E2 3D010A            cmp [X+1],10
 02E5 B004              jnz L68
 02E7                   .dbline 65
 02E7 560001            mov [X+0],1
 02EA           L68:
 02EA                   .dbline 66
 02EA           L64:
 02EA                   .dbline 56
 02EA 3D0000            cmp [X+0],0
 02ED AFC3              jz L63
 02EF                   .dbline 67
 02EF 62D000            mov REG[0xd0],>__r0
 02F2 50FF              mov A,-1
 02F4                   .dbline -2
 02F4           L62:
 02F4 38FD              add SP,-3
 02F6 20                pop X
 02F7                   .dbline 0 ; func end
 02F7 7F                ret
 02F8                   .dbsym l recibe_dato 2 c
 02F8                   .dbsym l recibe_contador 1 c
 02F8                   .dbsym l recibe_confirmacion 0 c
 02F8                   .dbend
 02F8                   .dbfile ./main.c
 02F8                   .dbfunc e MI_RSI_EXTERNA _MI_RSI_EXTERNA fV
 02F8           _MI_RSI_EXTERNA::
 02F8                   .dbline -1
 02F8 71C0              or F,-64
 02FA 08                push A
 02FB 5DD0              mov A,REG[0xd0]
 02FD 08                push A
 02FE 5DD3              mov A,REG[0xd3]
 0300 08                push A
 0301 5DD4              mov A,REG[0xd4]
 0303 08                push A
 0304 5DD5              mov A,REG[0xd5]
 0306 08                push A
 0307 62D000            mov REG[0xd0],>__r0
 030A 5100              mov A,[__r0]
 030C 08                push A
 030D 5100              mov A,[__r1]
 030F 08                push A
 0310 5100              mov A,[__r2]
 0312 08                push A
 0313 5100              mov A,[__r3]
 0315 08                push A
 0316 5100              mov A,[__r4]
 0318 08                push A
 0319 5100              mov A,[__r5]
 031B 08                push A
 031C 5100              mov A,[__r6]
 031E 08                push A
 031F 5100              mov A,[__r7]
 0321 08                push A
 0322 5100              mov A,[__r8]
 0324 08                push A
 0325 5100              mov A,[__r9]
 0327 08                push A
 0328 5100              mov A,[__r10]
 032A 08                push A
 032B 5100              mov A,[__r11]
 032D 08                push A
 032E 5100              mov A,[__rX]
 0330 08                push A
 0331 5100              mov A,[__rY]
 0333 08                push A
 0334 5100              mov A,[__rZ]
 0336 08                push A
 0337                   .dbline 21
 0337                   .dbline 22
 0337 9E87              xcall _disparo_sensores
 0339                   .dbline -2
 0339                   .dbline 23
 0339           L70:
 0339 62D000            mov REG[0xD0],>__r0
 033C 18                pop A
 033D 5300              mov [__rZ],A
 033F 18                pop A
 0340 5300              mov [__rY],A
 0342 18                pop A
 0343 5300              mov [__rX],A
 0345 18                pop A
 0346 5300              mov [__r11],A
 0348 18                pop A
 0349 5300              mov [__r10],A
 034B 18                pop A
 034C 5300              mov [__r9],A
 034E 18                pop A
 034F 5300              mov [__r8],A
 0351 18                pop A
 0352 5300              mov [__r7],A
 0354 18                pop A
 0355 5300              mov [__r6],A
 0357 18                pop A
 0358 5300              mov [__r5],A
 035A 18                pop A
 035B 5300              mov [__r4],A
 035D 18                pop A
 035E 5300              mov [__r3],A
 0360 18                pop A
 0361 5300              mov [__r2],A
 0363 18                pop A
 0364 5300              mov [__r1],A
 0366 18                pop A
 0367 5300              mov [__r0],A
 0369 18                pop A
 036A 60D5              mov REG[213],A
 036C 18                pop A
 036D 60D4              mov REG[212],A
 036F 18                pop A
 0370 60D3              mov REG[211],A
 0372 18                pop A
 0373 60D0              mov REG[208],A
 0375 18                pop A
 0376                   .dbline 0 ; func end
 0376 7E                reti
 0377                   .dbend
 0377                   .dbfunc e main _main fV
 0377           _main::
 0377                   .dbline -1
 0377                   .dbline 27
 0377                   .dbline 28
 0377 9C87              xcall _inicializacion
 0379                   .dbline 29
 0379 9CAA              xcall _recibe_valores
 037B                   .dbline 30
 037B 9DE9              xcall _activar_sensores
 037D                   .dbline 31
 037D 9E0D              xcall _ejecucion
 037F                   .dbline -2
 037F                   .dbline 32
 037F           L71:
 037F                   .dbline 0 ; func end
 037F 8FFF              jmp .
 0381                   .dbend
